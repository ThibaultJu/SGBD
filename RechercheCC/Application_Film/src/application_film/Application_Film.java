/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package application_film;

import Bean.BeanBDAccessProcedure;
import static Bean.EnumSGBD.SGBD.Oracle;
import Interface.Procedure;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Array;
import java.sql.Blob;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Hashtable;
import java.util.Vector;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Loyd
 */
public class Application_Film extends javax.swing.JFrame {

    /**
     * Creates new form Application_Film
     */
    DefaultTableModel defaultTable;
    DefaultListModel acteurListModel = new DefaultListModel();
    DefaultListModel reaListModel = new DefaultListModel();
    Vector<BufferedImage> vec;
    Hashtable hTable;
    int user = -1;
    
    public Application_Film() {
        initComponents();
        Deconnexion();
        acteurListModel = new DefaultListModel();
        acteurList.setModel(acteurListModel);
        
        reaListModel = new DefaultListModel();
        reaList.setModel(reaListModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        connexionButton = new javax.swing.JButton();
        utilisateurLabel = new javax.swing.JLabel();
        loginLabel = new javax.swing.JLabel();
        loginText = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        titreText = new javax.swing.JTextField();
        titreButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        idButton = new javax.swing.JButton();
        idText = new javax.swing.JTextField();
        logLabel = new javax.swing.JLabel();
        pwdText = new javax.swing.JPasswordField();
        rechercheButton = new javax.swing.JButton();
        acteurText = new javax.swing.JTextField();
        envoyerButton = new javax.swing.JButton();
        anneeText = new javax.swing.JTextField();
        AvantRadioButton = new javax.swing.JRadioButton();
        ApresRadioButton = new javax.swing.JRadioButton();
        PendantRadioButton = new javax.swing.JRadioButton();
        delActeurButton = new javax.swing.JButton();
        addActeurButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        acteurList = new javax.swing.JList<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        reaList = new javax.swing.JList<>();
        reaText = new javax.swing.JTextField();
        addReaButton = new javax.swing.JButton();
        delReaButton = new javax.swing.JButton();
        annee = new javax.swing.JLabel();
        pointBox = new javax.swing.JComboBox<>();
        Poster = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        nbLabel = new javax.swing.JLabel();
        nbCount = new javax.swing.JLabel();

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        connexionButton.setText("Connexion");
        connexionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connexionButtonActionPerformed(evt);
            }
        });

        utilisateurLabel.setText("Utilisateur :");

        loginLabel.setText("Login :");

        jLabel1.setText("Password :");

        titreButton.setText("Rechercher par titre");
        titreButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                titreButtonActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Titre", "Satut", "Tagline", "Release Date", "Vote Average", "Certification", "RunTime", "Budget"
            }
        ));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(table);

        idButton.setText("Recherche par ID");
        idButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idButtonActionPerformed(evt);
            }
        });

        rechercheButton.setText("Rechercher");
        rechercheButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rechercheButtonActionPerformed(evt);
            }
        });

        envoyerButton.setText("Envoyer");
        envoyerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                envoyerButtonActionPerformed(evt);
            }
        });

        AvantRadioButton.setSelected(true);
        AvantRadioButton.setText("Avant");
        AvantRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AvantRadioButtonActionPerformed(evt);
            }
        });

        ApresRadioButton.setText("Après");
        ApresRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ApresRadioButtonActionPerformed(evt);
            }
        });

        PendantRadioButton.setText("Pendant");
        PendantRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PendantRadioButtonActionPerformed(evt);
            }
        });

        delActeurButton.setText("Supprimer acteur");
        delActeurButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delActeurButtonActionPerformed(evt);
            }
        });

        addActeurButton.setText("Ajouter acteur");
        addActeurButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActeurButtonActionPerformed(evt);
            }
        });

        jScrollPane3.setViewportView(acteurList);

        jScrollPane1.setViewportView(reaList);

        addReaButton.setText("Ajouter réalisateur");
        addReaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addReaButtonActionPerformed(evt);
            }
        });

        delReaButton.setText("Supprimer réalisateur");
        delReaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delReaButtonActionPerformed(evt);
            }
        });

        annee.setText("Année :");

        pointBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        textArea.setColumns(20);
        textArea.setRows(5);
        jScrollPane4.setViewportView(textArea);

        nbLabel.setText("Nombre de vote pour ce film :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(utilisateurLabel)
                                .addGap(18, 18, 18)
                                .addComponent(logLabel)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(idButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(titreButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(titreText, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                                    .addComponent(idText)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(annee)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(anneeText, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(jLabel1)
                                            .addGap(18, 18, 18)
                                            .addComponent(pwdText))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(loginLabel)
                                            .addGap(39, 39, 39)
                                            .addComponent(loginText, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(28, 28, 28)
                                    .addComponent(connexionButton))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(reaText)
                                        .addComponent(delActeurButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(addActeurButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(acteurText)
                                        .addComponent(addReaButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(delReaButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGap(24, 24, 24)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                                .addComponent(rechercheButton, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(AvantRadioButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(PendantRadioButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ApresRadioButton)))
                        .addGap(18, 18, 18)
                        .addComponent(Poster, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(envoyerButton)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addGap(10, 10, 10))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pointBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(nbLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(nbCount)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(connexionButton)
                    .addComponent(loginLabel)
                    .addComponent(loginText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(pwdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(utilisateurLabel)
                    .addComponent(logLabel))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(titreButton)
                            .addComponent(titreText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(idText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idButton))
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(anneeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(annee))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AvantRadioButton)
                            .addComponent(PendantRadioButton)
                            .addComponent(ApresRadioButton))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(acteurText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(7, 7, 7)
                                .addComponent(addActeurButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(delActeurButton))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(reaText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addReaButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(delReaButton)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                        .addComponent(rechercheButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Poster, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(9, 9, 9))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pointBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(envoyerButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(nbLabel)
                                    .addComponent(nbCount))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void connexionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connexionButtonActionPerformed
        // TODO add your handling code here:
        BeanBDAccessProcedure bean = new BeanBDAccessProcedure("cb", "oracle", Oracle);
        String contrainte;
        ResultSet rs;
        
        if(!loginText.getText().isEmpty() && !pwdText.getText().isEmpty())
        {
            contrainte = loginText.getText() + "-" + pwdText.getText() + "-";
            contrainte = bean.executeProcedure(contrainte);
            
            if(contrainte != null)
            {
                logLabel.setText(loginText.getText());
                user = Integer.parseInt(contrainte);
                Connexion();
            } 
            else
                System.out.println("perdu");

        }
    }//GEN-LAST:event_connexionButtonActionPerformed

    private void titreButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titreButtonActionPerformed
        // TODO add your handling code here:
        BeanBDAccessProcedure bean = new BeanBDAccessProcedure("cb", "oracle", Oracle);
        ResultSet rs;
        String contrainte = new String();
        Vector<String> vecRet;
        int h;
        
        if(!titreText.getText().isEmpty())
        {
            contrainte = titreText.getText();
            rs = bean.executeProcedure(contrainte, Procedure.Proc.RechercheNom);
            
            try
            {
                if(rs.next())
                {
                    defaultTable = (DefaultTableModel)table.getModel();
                    defaultTable.getDataVector().clear();
                    hTable = new Hashtable();
                    vecRet = new Vector<String>();
                    
                    h = 1;
                    while(h < rs.getMetaData().getColumnCount())
                    {
                        if(rs.getObject(h) == null)
                            vecRet.add("null");
                        else
                            vecRet.add(rs.getObject(h).toString());
                    
                        h++;
                    }
                    
                    defaultTable.addRow(vecRet);
                    
                    if(rs.getBlob(h) != null)
                        hTable.put(0, ConversBlob(rs.getBlob(h)));
                    
                    table.setModel(defaultTable);
                }
            }
              
            catch(Exception e)
            {
                
            }
        }
    }//GEN-LAST:event_titreButtonActionPerformed

    private void idButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idButtonActionPerformed
        // TODO add your handling code here:
        BeanBDAccessProcedure bean = new BeanBDAccessProcedure("cb", "oracle", Oracle);
        ResultSet rs;
        String contrainte;
        Vector<String> vecRet;
        int h;
        
        if(!idText.getText().isEmpty())
        {
            contrainte = idText.getText();
            rs = bean.executeProcedure(contrainte, Procedure.Proc.RechercheId);
            
            try
            {
                if(rs.next())
                {
                    defaultTable = (DefaultTableModel)table.getModel();
                    defaultTable.getDataVector().clear();
                    hTable = new Hashtable();
                    vecRet = new Vector<String>();
                    
                    h = 1;
                    while(h < rs.getMetaData().getColumnCount())
                    {
                        if(rs.getObject(h) == null)
                            vecRet.add("null");
                        else
                            vecRet.add(rs.getObject(h).toString());
                    
                        h++;
                    }
                    
                    defaultTable.addRow(vecRet);
                    
                    if(rs.getBlob(h) != null)
                        hTable.put(0, ConversBlob(rs.getBlob(h)));
                    
                    table.setModel(defaultTable);
                }
            }
              
            catch(Exception e)
            {
                
            }  
        }
    }//GEN-LAST:event_idButtonActionPerformed

    private void rechercheButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rechercheButtonActionPerformed
        // TODO add your handling code here:
        BeanBDAccessProcedure bean = new BeanBDAccessProcedure("cb", "oracle", Oracle);
        String[] acteur;
        String[] rea;
        String date;
        String temps;
        ResultSet rs;
        Object[] ret = null;
        Vector<String> vecRet;
        
        int nbFilm = 0, h = 0;
        
        if(!acteurListModel.isEmpty())
        {
            acteur = new String[acteurListModel.getSize()];
            for(int i = 0; i < acteurListModel.getSize(); i++)
            {
                acteur[i] = (String)acteurListModel.getElementAt(i);
            }
        }
        else
            acteur = null;
        
        if(!reaListModel.isEmpty())
        {
            rea = new String[reaListModel.getSize()];
            for(int i = 0; i < reaListModel.getSize(); i++)
            {
                rea[i] = (String)reaListModel.getElementAt(i);
            }
        }
        else
            rea = null;
        
        if(!anneeText.getText().isEmpty())
        {
            if(AvantRadioButton.isSelected())
                temps = "<";
            else
            {
                if(ApresRadioButton.isSelected())
                    temps = ">";
                else
                    temps = "=";
            }
            
            date = anneeText.getText();
        }
        else
        {
            date = null;
            temps = null;
        }
              
        rs = bean.executeProcedure(acteur, rea, date, temps);
        
        defaultTable = (DefaultTableModel)table.getModel();
        defaultTable.getDataVector().clear();
        hTable = new Hashtable();
        
        try
        {
            while(rs.next())
            {
                vecRet = new Vector<String>();
                h = 1;
                while(h < rs.getMetaData().getColumnCount())
                {
                    if(rs.getObject(h) == null)
                        vecRet.add("null");
                    else
                        vecRet.add(rs.getObject(h).toString());
                    
                    h++;
                }
                
                
                defaultTable.addRow(vecRet);
                
                if(rs.getBlob(h) != null)
                        hTable.put(nbFilm, ConversBlob(rs.getBlob(h)));

                table.setModel(defaultTable);
                nbFilm++;
            }
            if(nbFilm==0)
            {
                JOptionPane.showMessageDialog(this, "Erreur - Pas de film trouvé pour ces critères");
                defaultTable.setRowCount(0);
                table.setModel(defaultTable);
            }
        }
        
        catch(SQLException e)
        {
            System.out.println("Erreur !!! " + e.getMessage());
        }
        
        catch(IOException e)
        {
            System.out.println("Erreur !!! " + e.getMessage());
        }
        if(ret != null)
        {
            
        }
        else
        {
            
        }
        /*String contrainte = new String();
        String[] temp;
        Object[] ret;
        int i = 0, j = 0, length;
        
        
        if(!acteurText.getText().isEmpty())
        {
            temp = acteurText.getText().split(",");
            
            while(i < temp.length)
            {
                contrainte += temp[i] + "-";
                i++;
            }
            System.out.println(contrainte);
            ret = bean.executeProcedure(contrainte, Procedure.Proc.RechercheActeur);
            
            
            }
        }*/
    }//GEN-LAST:event_rechercheButtonActionPerformed

    private void envoyerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_envoyerButtonActionPerformed
        // TODO add your handling code here:
        BeanBDAccessProcedure bean = new BeanBDAccessProcedure("cb", "oracle", Oracle);
        if(table.getSelectedRow() != -1)
        {
            bean.executeProcedure(pointBox.getSelectedItem().toString(), user, defaultTable.getValueAt(table.getSelectedRow(), 0).toString(), Procedure.Proc.Vote);
            bean.executeProcedure(textArea.getText(), user, defaultTable.getValueAt(table.getSelectedRow(), 0).toString(), Procedure.Proc.Commentaire);
        }
    }//GEN-LAST:event_envoyerButtonActionPerformed

    private BufferedImage ConversBlob(Blob blob) throws SQLException, IOException
    {
        InputStream in = blob.getBinaryStream();
        return ImageIO.read(in);
    }
    
    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        // TODO add your handling code here:
        if(table.getSelectedRow() != -1)
        {
            envoyerButton.setEnabled(true);
            int i;
            BeanBDAccessProcedure bean = new BeanBDAccessProcedure("cb", "oracle", Oracle);
            
            textArea.setText(bean.readCommentaire(user, defaultTable.getValueAt(table.getSelectedRow(), 0).toString()));
            pointBox.setSelectedIndex(bean.readVote(user, defaultTable.getValueAt(table.getSelectedRow(), 0).toString()));
            nbCount.setText(String.valueOf(bean.readNumber(defaultTable.getValueAt(table.getSelectedRow(), 0).toString())));
            
            if(hTable.containsKey(table.getSelectedRow()))
            {
                Image img = (((BufferedImage)hTable.get(table.getSelectedRow())).getScaledInstance(Poster.getWidth(), Poster.getHeight() ,Image.SCALE_SMOOTH));
                ImageIcon icon =new ImageIcon(img);    
                Poster.setIcon(icon);
                Poster.revalidate();
            }
            else
            {
                ImageIcon icon = new ImageIcon();
                Poster.setIcon(icon);
                Poster.revalidate();
            }

        }
        else
        {
            envoyerButton.setEnabled(false);
        }  
    }//GEN-LAST:event_tableMouseClicked

    private void AvantRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AvantRadioButtonActionPerformed
        // TODO add your handling code here:
        
        if(AvantRadioButton.isSelected())
        {
            AvantRadioButton.setSelected(true);
            ApresRadioButton.setSelected(false);
            PendantRadioButton.setSelected(false);
        }
        else
           AvantRadioButton.setSelected(true); 
    }//GEN-LAST:event_AvantRadioButtonActionPerformed

    private void ApresRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ApresRadioButtonActionPerformed
        // TODO add your handling code here:
        if(ApresRadioButton.isSelected())
        {
            AvantRadioButton.setSelected(false);
            ApresRadioButton.setSelected(true);
            PendantRadioButton.setSelected(false);
        }
        else
            ApresRadioButton.setSelected(true);
    }//GEN-LAST:event_ApresRadioButtonActionPerformed

    private void PendantRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PendantRadioButtonActionPerformed
        // TODO add your handling code here:
        if(PendantRadioButton.isSelected())
        {
            AvantRadioButton.setSelected(false);
            ApresRadioButton.setSelected(false);
            PendantRadioButton.setSelected(true);
        }
        PendantRadioButton.setSelected(true);
    }//GEN-LAST:event_PendantRadioButtonActionPerformed

    private void addActeurButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActeurButtonActionPerformed
        // TODO add your handling code here:
        if(!acteurText.getText().isEmpty())
        {  
            acteurListModel.addElement(acteurText.getText());
            acteurText.setText("");
        }
    }//GEN-LAST:event_addActeurButtonActionPerformed

    private void delActeurButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delActeurButtonActionPerformed
        // TODO add your handling code here:
        if(!acteurListModel.isEmpty() && acteurList.getSelectedIndex() != -1)
            acteurListModel.removeElementAt(acteurList.getSelectedIndex());
    }//GEN-LAST:event_delActeurButtonActionPerformed

    private void addReaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addReaButtonActionPerformed
        // TODO add your handling code here:
        if(!reaText.getText().isEmpty())
        {  
            reaListModel.addElement(reaText.getText());
            reaText.setText("");
        }
    }//GEN-LAST:event_addReaButtonActionPerformed

    private void delReaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delReaButtonActionPerformed
        // TODO add your handling code here:
        if(!reaListModel.isEmpty() && reaList.getSelectedIndex() != -1)
            reaListModel.removeElementAt(reaList.getSelectedIndex());
    }//GEN-LAST:event_delReaButtonActionPerformed

    private void Connexion()
    {
        connexionButton.setEnabled(false);
        idButton.setEnabled(true);
        rechercheButton.setEnabled(true);
        titreButton.setEnabled(true);
        table.setEnabled(true);
        addActeurButton.setEnabled(true);
        delActeurButton.setEnabled(true);
        addReaButton.setEnabled(true);
        delReaButton.setEnabled(true);
    }
    
    private void Deconnexion()
    {
        connexionButton.setEnabled(true);
        idButton.setEnabled(false);
        rechercheButton.setEnabled(false);
        titreButton.setEnabled(false);
        table.setEnabled(false);
        envoyerButton.setEnabled(false);
        addActeurButton.setEnabled(false);
        delActeurButton.setEnabled(false);
        addReaButton.setEnabled(false);
        delReaButton.setEnabled(false);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Application_Film.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Application_Film.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Application_Film.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Application_Film.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Application_Film().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton ApresRadioButton;
    private javax.swing.JRadioButton AvantRadioButton;
    private javax.swing.JRadioButton PendantRadioButton;
    private javax.swing.JLabel Poster;
    private javax.swing.JList<String> acteurList;
    private javax.swing.JTextField acteurText;
    private javax.swing.JButton addActeurButton;
    private javax.swing.JButton addReaButton;
    private javax.swing.JLabel annee;
    private javax.swing.JTextField anneeText;
    private javax.swing.JButton connexionButton;
    private javax.swing.JButton delActeurButton;
    private javax.swing.JButton delReaButton;
    private javax.swing.JButton envoyerButton;
    private javax.swing.JButton idButton;
    private javax.swing.JTextField idText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel logLabel;
    private javax.swing.JLabel loginLabel;
    private javax.swing.JTextField loginText;
    private javax.swing.JLabel nbCount;
    private javax.swing.JLabel nbLabel;
    private javax.swing.JComboBox<String> pointBox;
    private javax.swing.JPasswordField pwdText;
    private javax.swing.JList<String> reaList;
    private javax.swing.JTextField reaText;
    private javax.swing.JButton rechercheButton;
    private javax.swing.JTable table;
    private javax.swing.JTextArea textArea;
    private javax.swing.JButton titreButton;
    private javax.swing.JTextField titreText;
    private javax.swing.JLabel utilisateurLabel;
    // End of variables declaration//GEN-END:variables
}
